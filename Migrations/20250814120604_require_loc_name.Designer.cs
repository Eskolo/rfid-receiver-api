// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using rfid_receiver_api.Models;

#nullable disable

namespace rfid_receiver_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250814120604_require_loc_name")]
    partial class require_loc_name
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("rfid_receiver_api.Models.Item", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("boolean")
                        .HasColumnName("is_present");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer")
                        .HasColumnName("location_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_item");

                    b.HasIndex("LocationId")
                        .HasDatabaseName("ix_item_location_id");

                    b.ToTable("item", (string)null);
                });

            modelBuilder.Entity("rfid_receiver_api.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_location");

                    b.ToTable("location", (string)null);
                });

            modelBuilder.Entity("rfid_receiver_api.Models.Scan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("item_id");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer")
                        .HasColumnName("location_id");

                    b.Property<int>("Rssi")
                        .HasColumnType("integer")
                        .HasColumnName("rssi");

                    b.Property<DateTime>("ScannedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("scanned_at");

                    b.HasKey("Id")
                        .HasName("pk_scan");

                    b.HasIndex("ItemId")
                        .HasDatabaseName("ix_scan_item_id");

                    b.HasIndex("LocationId")
                        .HasDatabaseName("ix_scan_location_id");

                    b.ToTable("scan", (string)null);
                });

            modelBuilder.Entity("rfid_receiver_api.Models.Item", b =>
                {
                    b.HasOne("rfid_receiver_api.Models.Location", "Location")
                        .WithMany("Items")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_item_location_location_id");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("rfid_receiver_api.Models.Scan", b =>
                {
                    b.HasOne("rfid_receiver_api.Models.Item", "Item")
                        .WithMany("Scans")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_scan_item_item_id");

                    b.HasOne("rfid_receiver_api.Models.Location", "Location")
                        .WithMany("Scans")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_scan_location_location_id");

                    b.Navigation("Item");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("rfid_receiver_api.Models.Item", b =>
                {
                    b.Navigation("Scans");
                });

            modelBuilder.Entity("rfid_receiver_api.Models.Location", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Scans");
                });
#pragma warning restore 612, 618
        }
    }
}
